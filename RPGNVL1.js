// 1. Cria√ß√£o das vari√°veis principais com let
let nome = "Claudinei do Pneu";
let classe = "Guerreiro das terras da Steam";
let nivel = 99;
let vida = 85;
let ouro = 120;
let xp = 3000;
let manaAtual = 150;
let manaMaxima = 150;
let experiencia = 350;
let vidaMaxima = 100;
let forca = 90;
let defesa = 150;
let agilidade = 55;
let combatesVencidos = 0;
let Local = "Terra Perdida dos Campos de Gamers";
// 2. Defini√ß√£o das constantes m√°gicas com const
const NOME_ARMA = "Espada CSS";
const DANO_BASE = 100;
const NOME_ARMADURA = "Capa de JavaScript";
const DEFESA_BASE = 100;

// 3. Aplica√ß√£o de operadores de atribui√ß√£o diferentes
xp += 200; // ganhou 200 pontos de Back-end XP
ouro -= 100; // comprou um gift card por 100 moedas de bitcoin
vida += 50; // usou o gift card e recuperou 50 pontos de vida
let danoAtualizado = DANO_BASE * 2; // arma foi encantada com o poder do Deep Seek e o dano foi dobrado

// 4. C√°lculo de atributos finais
let ataqueTotal = nivel + danoAtualizado;
let defesaTotal = DEFESA_BASE + nivel / 2;

// 5. Avalia√ß√£o de prontid√£o com operadores l√≥gicos
let vidaSuficiente = vida > 80;
let ataqueForte = ataqueTotal > 70;
let nivelAvancado = nivel >= 20;
let podeEnfrentarGuardiao = vidaSuficiente && (ataqueForte || nivelAvancado);

// 6. Gera√ß√£o da lore do personagem (narrativa)
console.log(`Na ${Local} , nasce um novo guerreiro...`);
console.log(`${nome}, o ${classe}`);
console.log(`Portando sua ${NOME_ARMA} e vestindo a ${NOME_ARMADURA},`);
console.log(
  `Com n√≠vel ${nivel}, possui um ataque total de ${ataqueTotal}, podendo destruir qualquer Cracker do seu caminho.`
);
console.log(
  `Suas defesas feitas de ${NOME_ARMADURA} somam ${defesaTotal} pontos, sendo impenetr√°veis contra Devs avan√ßados.`
);
console.log(
  `Ap√≥s intensos treinos com o mago do HTML e batalhas contra o Rei do dominio GITHUB: Copilot, agora tem ${vida} pontos de vida.`
);
console.log(
  `Restaurado e pronto para a batalha pelo poder do Deep Seek, ${nome} sente a brisa suave do javaScript soar pelo seu rosto, isto lhe enche de determina√ß√£o, (determina√ß√£o + 1000).`
);
console.log(
  `Vida suficiente para enfrentar desafios feitos pelos DEVS lend√°rios? ${vidaSuficiente}`
);
console.log(`Pode enfrentar o Guardi√£o do Deep Seek? ${podeEnfrentarGuardiao}`);
console.log("A saga est√° apenas come√ßando...");

// Estado atual da hist√≥ria
let localAtual = `O grande guerreiro ${nome}, estava na ${Local}. Um lugar onde gamers perdidos apodrecem em meio a c√≥digos de jogos mal feitos, crackers, v√≠rus e jogos de ps2 da feira.`;
let missaoAtual =
  "Sua miss√£o no n√≠vel um era derrotar o guardi√£o poderoso do Deep Seek, e toma-lo tal poder para si mesmo, aprimorando suas habilidades e poderes.";

// Pr√≥logo
console.log(
  `${nome} teve diversos desafios na terra dos gamers perdidos, lutou contra oponentes poderosos como o Copilot e Guardi√£o do Deep Seek.`
);
console.log(
  `Ap√≥s essas lutas, ${nome} adquiriu um poderoso c√≥digo: Deep Seek, onde ele pode auxiliar ${nome} em suas decis√µes e miss√µes, al√©m de restaurar seu estado atual, para que ele esteja preparado para o que estar por vir.`
);
console.log(
  `Entretanto, ${nome} n√£o esperava o mal que estava se aproximando: Um antigo amigo cujo nome era FORTAN, Fortan foi a primeira linguagem de programa√ß√£o, possui um poder inestim√°vel, que nosso ${classe} vai ter que enfrentar.`
);

// CAP√çTULO 1: Condicionais Simples na narrativa
console.log("üåÖ CAP√çTULO 1: A primeira Linguagem de Programa√ß√£o");
console.log(
  `Com a amea√ßa se aproximando dav${Local}, ${nome} est√° em d√∫vida sobre qual caminho ele dever√° seguir...`
);
console.log(
  `${nome} precisa avaliar seu n√≠vel, vida e recursos antes de enfrentar FORTAN.`
);

// Condi√ß√µes Simples
if (nivel < 55) {
  console.log(
    ` O level do ${nome} √© baixo, ele deve treinar e derrotar mais inimigos antes de enfrentar FORTAN.`
  );
} else if (vida < 90) {
  console.log(
    ` Vida baixa! ${nome} deve procurar um glamBurguer para recuperar a vida!`
  );
} else {
  console.log(
    `${nome} est√° preparado para enfrentar o antigo amigo FORTAN!, mas ele precisa de mais recursos para a batalha.`
  );
}

// CAP√çTULO 2: Condicionais Compostas
console.log("üõ°Ô∏è CAP√çTULO 2: Tempos Ruins");
console.log(
  `Antes de enfrentar FORTAN, ${nome} precisa decidir como usar seus recursos, para poder comprar os melhores equipamentos.`
);
console.log(
  `${nome} decide ir at√© o local com os melhores equipamentos: Mercadinho Big bommmm.`
);

console.log(
  `${nome} chega ao Mercadinho Big bommmm e encontra v√°rias op√ß√µes de equipamentos.`
);

if (ouro >= 50) {
  console.log(
    "üí∞ O guerreiro usa ouro para adquirir uma poderosa po√ß√£o: Red Bull, uma bebida que foi deixado pelo humano mais forte que ja pisou na terra dos gamers perdidos."
  );
  vida += 20; // Aumenta vida
  manaAtual += 30; // Aumenta mana
  forca += 100; // Aumenta for√ßa
  agilidade += 100; // Aumenta agilidade
} else {
  console.log("üõ°Ô∏è Sem ouro, ele deve usar suas habilidades em codigos!");
  defesa += 50; // Aumenta defesa
}
console.log(
  `${nome} est√° pronto para a batalha!, o ${classe} ent√£o parte para a localiza√ß√£o do guardi√£o FORTAN, o ${classe} sente a adrenalina subir, e o cora√ß√£o acelerar, ele sabe que essa batalha n√£o ser√° f√°cil.`
);
// Prepara√ß√£o para a batalha
console.log(
  `${nome} corre para o campo de batalha, pronto para enfrentar FORTAN.`
);

// CAP√çTULO 3: Condicionais Encadeadas
console.log("‚öîÔ∏è CAP√çTULO 3: Fortan");
let poderInimigo = 100;
let vidaAtual = vida;
if (vidaAtual <= 90) {
  console.log(` Com pouca vida! ${nome} deve usar um item de cura!`);
  vida += 20; // Cura
  poderInimigo -= forca * 2; // Ataque contundente
} else if (manaAtual >= 50) {
  console.log(
    ` ${nome} usa um poderoso feiti√ßo de java!, que quebra as defesas de FORTAN!`
  );
  console.log(` A barreira de FORTAN foi reduzida!`);
  manaAtual -= 50; // Usa mana
  poderInimigo -= forca * 3; // Ataque m√°gico
} else {
  console.log(` ${nome} ataca com sua ${arma}!`);
  poderInimigo -= forca; // Ataque normal
}

// Resultado da batalha
if (poderInimigo <= 0) {
  console.log(
    ` Vit√≥ria! ${nome} derrotou FORTAN!, com as defesas de Fortan reduzidas, ${nome} da um ataque final e derrota Fortan`
  );
  experiencia += 1000; // Ganha experi√™ncia
  combatesVencidos++;
} else {
  console.log(` Derrota... ${nome} n√£o conseguiu vencer FORTAN.`);
}

// Ep√≠logo
console.log(
  `A aventura de ${nome} est√° longe de acabar. Novas batalhas e desafios o aguardam na ${Local}!`
);

//CONTINUA√á√ÉO DA SAGA - N√çVEL 3

classe = "CODHUNTER";
nivel = 1000; // Evoluiu ap√≥s as batalhas anteriores!
vidaAtual = 120; // Vida atual ap√≥s as batalhas
vidaMaxima = 200; // Vida m√°xima ap√≥s as batalhas
experiencia = 1200; // Experi√™ncia adquirida ap√≥s derrotar FORTAN
ouro = 300; // Ouro coletado ap√≥s derrotar FORTAN

// Invent√°rio do CODHUNTER - primeira cole√ß√£o
let inventario = ["Red Bull", "Espada Css", "Capa de javaScript"];
let aliados = [
  "Guts",
  "Ichigo",
  "Vacivous",
  "Mohg",
  "Ziegfried",
  "LabubuDiddy",
];
let inimigosEncontrados = [
  "Tung Tung Sahur",
  "Boobie goods",
  "Morango do amor",
  "Receita Federal",
];
let salasCastelo = ["TikTok", "Twitter", "Reddit", "Discord"];
let tesourosColetados = [];

console.log(
  `O ${nome} agora √© um ${classe}, com n√≠vel ${nivel} e vida m√°xima de ${vidaMaxima}.`
);
console.log(
  `Ap√≥s as vit√≥rias dos cap√≠tulos anteriores, nosso ${classe} chegou ao castelo da internet Lobotomizada`
);
console.log("Invent√°rio inicial: " + inventario.length + " itens irrados");

//  CAP√çTULO 1: Internet Lobotomizada
console.log("üåê CAP√çTULO 1: A Internet Lobotomizada");
console.log(
  `Ap√≥s derrotar FORTAn, ${nome} se depara com um novo desafio: a Internet Lobotomizada, um lugar onde os c√≥digos s√£o confusos e os desafios s√£o infinitos.`
);
console.log(
  `${nome} n√£o sabe a origem desse lugar criado por FORTAN, antes de sua derrota, mas ele sabe que precisa desvendar os mist√©rios e derrotar os novos inimigos aliados de FORTAN.`
);
console.log(
  `${nome} sente a brisa suave do javaScript soar pelo seu rosto,isto lhe cria a coragem necess√°ria para entrar aos aposentos de FORTAN.`
);
console.log(`${nome} entra no castelo e encontra um ba√∫ misterioso.`);

//  Declara√ß√£o e inicializa√ß√£o
let powerUpsEncontrados = ["Monster", "Ch√° gelado", "Dolly"];
let armadilhasEncontradas = []; // Array vazio - ser√° preenchido ap√≥s eventos futuros

// Acesso e modifica√ß√£o de elementos
console.log(" Primeiro power up encontrado: " + powerUpsEncontrados[0]);
console.log(" Total de power ups: " + powerUpsEncontrados.length);

// Modificando elemento espec√≠fico
inventario[0] = "Power up de Vida Suprema"; // Upgrade da power up!
console.log("üåÄüå† " + nome + " aprimorou uma power up!");

// M√©todos de array fundamentais
inventario.push("lancheira do minecraft"); // Adicionando no final do array
console.log(" Novo item adicionado! Invent√°rio: " + inventario); // Exibindo invent√°rio atualizado

let itemRemovido = inventario.pop(); // Removendo do final do array
console.log(" Item removido: " + itemRemovido);
console.log(" Invent√°rio atual: " + inventario);

// CAP√çTULO 2: As Salas sem sentido
console.log("üåÄ CAP√çTULO 2: As Salas sem sentido");

// Explorando cada sala da Internet usando for tradicional
console.log(
  " Explora√ß√£o explora√ß√£o das " + salasCastelo.length + " salas sombrias..."
);

for (let i = 0; i < salasCastelo.length; i++) {
  console.log(" Salas " + (i + 1) + ": " + salasCastelo[i]);

  // L√≥gicas diferentes para cada uma das salas baseadas nos √≠ndices
  if (i === 0) {
    console.log(nome + " encontra memes antigos!");
    experiencia += 150;
    tesourosColetados.push("Memes Antigos");
  } else if (i === 1) {
    console.log(" O pior lugar da internet!");
    forca -= 10;
    tesourosColetados.push("Maldade do Twitter");
  } else {
    console.log(" Os usuarios do reddit atacam " + nome + "!");
    vidaAtual -= 20; // Pequeno dano
    tesourosColetados.push("Tesouro do Reddit");
  }
}

console.log(
  " Explora√ß√£o das salas completas XP: " + experiencia + " | Vida: " + vidaAtual
);

//  CAP√çTULO 3: O grande reencontro

console.log("ü§ù CAP√çTULO 3: Reunindo os Devs lend√°rios");

// Recrutando Devs lend√°rios com for tradicional
console.log(nome + " convoca seus aliados para a √∫ltima batalha:");

for (let i = 0; i < aliados.length; i++) {
  let aliado = aliados[i];
  console.log(
    " Devs lend√°rios " + (i + 1) + ": " + aliado + " se junta para a miss√£o!"
  );

  // Cada posi√ß√£o no array determina uma habilidade especial √∫nica
  if (i === 0) {
    // Primeiro aliado: Guerreiro
    console.log(
      " Como guerreiro, " + aliado + " multiplica a for√ßa da equipe!"
    );
    forca *= 2;
  } else if (i === 1) {
    // Segundo aliado: Assassino
    console.log(
      " Como assassino, " + aliado + " aumenta a agilidade da equipe!"
    );
    agilidade += 20;
  } else {
    // Demais aliados: suportes
    console.log(
      " Como suporte, " +
        aliado +
        " aprimora t√°ticas de combate da equipe para enfrentar todos os desafios!"
    );
    experiencia += 40;
    defesaTotal += 30;
    vidaMaxima += 10;
  }
}

console.log(
  "Devs lend√°rios reunidos! Ouro: " + ouro + " | Vida m√°xima: " + vidaMaxima
);

//  CAP√çTULO 4: A BATALHA FINAL da internet lobotomizada
console.log(" CAP√çTULO 4: Os inimigos da internet lobotomizada");

// Sistema de batalha usando arrays e for tradicional
let inimigosBatalha = [
  "Tralalero tralala",
  "Senhor dos boobie goods",
  "morango do amor mutante",
];
let danoRecebido = [];

console.log(
  " " +
    nome +
    " batalha contra " +
    inimigosBatalha.length +
    " inimigos sombrios!"
);

// Batalha usando for tradicional para controle preciso do dano
for (let i = 0; i < inimigosBatalha.length; i++) {
  let inimigo = inimigosBatalha[i];
  let dano = Math.floor(Math.random() * 50) + 10; // Dano entre 10 e 59

  console.log(" Round " + (i + 1) + "  Enfrenta: " + inimigo);
  console.log(" " + aliados + " causam " + dano + " de dano!");

  danoRecebido.push(dano); // Armazena dano para c√°lculos posteriores das batalhas

  // L√≥gica especial para cada rodada baseada nos √≠ndices
  if (i === 0) {
    console.log(" Vit√≥ria! Fragmento de Meme Supremo concedem b√¥nus!");
    inventario.push("Fragmento de Meme Supremo");
  } else if (i === 1) {
    console.log(
      " Segundo round! Os Brainrots absorvem a agilidade, mas " +
        nome +
        " persiste!"
    );
    agilidade -= 10;
  } else {
    console.log(
      " Batalha final! Os morangos do amor mutante recuam! Vit√≥ria alcan√ßada!"
    );
    experiencia += 1000;
    inventario.push("Morango do amor");
  }
}

// Calculando status da batalha usando for normal
let danoTotal = 1000;
for (let i = 0; i < danoRecebido.length; i++) {
  danoTotal += danoRecebido[i];
  console.log(" Round " + (i + 1) + "  Dano: " + danoRecebido[i]);
}

console.log(" Dano total causado: " + danoTotal);
console.log(" Tesouros coletados: " + inventario.length + " itens l√©ndarios!");


